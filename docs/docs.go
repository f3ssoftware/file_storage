// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/files/{filename}": {
            "get": {
                "description": "Download a file from the storage server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Download a file",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"example.jpg\"",
                        "description": "Name of the file to download",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request - filename required",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "Upload a file to the storage server",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File uploaded successfully",
                        "schema": {
                            "$ref": "#/definitions/handler.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid file or no file provided",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.ErrorResponse": {
            "description": "Error response structure",
            "type": "object",
            "properties": {
                "message": {
                    "description": "@Description Error message",
                    "type": "string",
                    "example": "File too large (max 10MB)"
                }
            }
        },
        "handler.UploadResponse": {
            "description": "Response structure for file upload operations",
            "type": "object",
            "properties": {
                "filename": {
                    "description": "@Description The name of the uploaded file",
                    "type": "string",
                    "example": "example.jpg"
                },
                "message": {
                    "description": "@Description A message describing the operation result",
                    "type": "string",
                    "example": "File uploaded successfully"
                },
                "size": {
                    "description": "@Description The size of the uploaded file in bytes",
                    "type": "integer",
                    "example": 12345
                },
                "url": {
                    "description": "@Description The URL path to access the uploaded file",
                    "type": "string",
                    "example": "/files/example.jpg"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "File Storage Server API",
	Description:      "A simple file storage server built with Go that allows you to upload and serve files.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
